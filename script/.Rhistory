data_crime$day <- strtoi(data_crime$day)
data_crime$hour <- substr(data_crime$Event.Clearance.Date, 12, 13)
data_crime$hour <- strtoi(data_crime$hour)
data_crime$am_pm <- substr(data_crime$Event.Clearance.Date, 21, 22)
day1 <- filter(data_crime, day == 1)
day2 <- filter(data_crime, day == 2)
day3 <- filter(data_crime, day == 3)
hours <- c(paste(c(1:12), "AM"), paste(c(1:12), "PM"))
for (i in 1:12) {
countX[i] <- 1
}
countX <- c()
for (i in 1:12) {
countX[i] <- 1
}
countX
countX <- c()
for (i in 1:12) {
num_am <- nrow(filter(data_crime, hour == i, am_pm == "AM"))
num_pm <- nrow(filter(data_crime, hour == i, am_pm == "PM"))
countX[i] <- num_am
countX[i * 2] <- num_am
}
countX
for (i in 1:12) {
num_am <- nrow(filter(data_crime, hour == i&&am_pm == "AM"))
num_pm <- nrow(filter(data_crime, hour == i&&am_pm == "PM"))
countX[i] <- num_am
countX[i * 2] <- num_am
}
countX
countX <- c()
for (i in 1:12) {
num_am <- nrow(filter(data_crime, hour = i, am_pm = "AM"))
num_pm <- nrow(filter(data_crime, hour = i, am_pm = "PM"))
countX[i] <- num_am
countX[i * 2] <- num_am
}
countX <- c()
for (i in 1:12) {
num_am <- nrow(filter(data_crime, hour == i, am_pm == "AM"))
num_pm <- nrow(filter(data_crime, hour == i, am_pm == "PM"))
countX[i] <- num_am
countX[i * 2] <- num_am
}
countX
countX <- c()
for (i in 1:12) {
num_am <- nrow(filter(day1, hour == i, am_pm == "AM"))
num_pm <- nrow(filter(day1, hour == i, am_pm == "PM"))
countX[i] <- num_am
countX[i * 2] <- num_am
}
countX
library(ggmap)
library(dplyr)
library(ggplot2)
data_crime <- read.csv('../data/Seattle_Police_Department_911_Incident_Response.csv')
#dates <- as.Date(data_crime$Event.Clearance.Date, '%m/%d/%Y %I:%M:%S %p')
data_crime$day <- substr(data_crime$Event.Clearance.Date, 4, 5)
data_crime$day <- strtoi(data_crime$day)
data_crime$hour <- substr(data_crime$Event.Clearance.Date, 12, 13)
data_crime$hour <- strtoi(data_crime$hour)
data_crime$am_pm <- substr(data_crime$Event.Clearance.Date, 21, 22)
day1 <- filter(data_crime, day == 1)
day2 <- filter(data_crime, day == 2)
day3 <- filter(data_crime, day == 3)
hours <- c(paste(c(1:12), "AM"), paste(c(1:12), "PM"))
countX <- c()
for (i in 1:12) {
num_am <- nrow(filter(day1, hour == i, am_pm == "AM"))
num_pm <- nrow(filter(day1, hour == i, am_pm == "PM"))
countX[i] <- num_am
countX[i * 2] <- num_am
}
library(ggmap)
library(dplyr)
library(ggplot2)
data_crime <- read.csv('../data/Seattle_Police_Department_911_Incident_Response.csv')
#dates <- as.Date(data_crime$Event.Clearance.Date, '%m/%d/%Y %I:%M:%S %p')
data_crime$day <- substr(data_crime$Event.Clearance.Date, 4, 5)
data_crime$day <- strtoi(data_crime$day)
data_crime$hour <- substr(data_crime$Event.Clearance.Date, 12, 13)
#data_crime$hour <- strtoi(data_crime$hour)
data_crime$am_pm <- substr(data_crime$Event.Clearance.Date, 21, 22)
day1 <- filter(data_crime, day == 1)
day2 <- filter(data_crime, day == 2)
day3 <- filter(data_crime, day == 3)
hours <- c(paste(c(1:12), "AM"), paste(c(1:12), "PM"))
countX <- c()
for (i in 1:12) {
num_am <- nrow(filter(day1, hour == i, am_pm == "AM"))
num_pm <- nrow(filter(day1, hour == i, am_pm == "PM"))
countX[i] <- num_am
countX[i * 2] <- num_am
}
strtoi("11")
library(ggmap)
library(dplyr)
library(ggplot2)
data_crime <- read.csv('../data/Seattle_Police_Department_911_Incident_Response.csv')
#dates <- as.Date(data_crime$Event.Clearance.Date, '%m/%d/%Y %I:%M:%S %p')
data_crime$day <- substr(data_crime$Event.Clearance.Date, 4, 5)
data_crime$day <- strtoi(data_crime$day)
data_crime$hour <- substr(data_crime$Event.Clearance.Date, 12, 13)
data_crime$hour <- strtoi(data_crime$hour)
data_crime$am_pm <- substr(data_crime$Event.Clearance.Date, 21, 22)
day1 <- filter(data_crime, day == 1)
day2 <- filter(data_crime, day == 2)
day3 <- filter(data_crime, day == 3)
hours <- c(paste(c(1:12), "AM"), paste(c(1:12), "PM"))
countX <- c()
for (i in 1:12) {
num_am <- nrow(filter(day1, hour == i, am_pm == "AM"))
num_pm <- nrow(filter(day1, hour == i, am_pm == "PM"))
countX[i] <- num_am
countX[i * 2] <- num_am
}
library(ggmap)
library(dplyr)
library(ggplot2)
data_crime <- read.csv('../data/Seattle_Police_Department_911_Incident_Response.csv')
#dates <- as.Date(data_crime$Event.Clearance.Date, '%m/%d/%Y %I:%M:%S %p')
data_crime$day <- substr(data_crime$Event.Clearance.Date, 4, 5)
data_crime$day <- strtoi(data_crime$day)
data_crime$hour <- substr(data_crime$Event.Clearance.Date, 12, 13)
#data_crime$hour <- strtoi(data_crime$hour)
data_crime$am_pm <- substr(data_crime$Event.Clearance.Date, 21, 22)
day1 <- filter(data_crime, day == 1)
day2 <- filter(data_crime, day == 2)
day3 <- filter(data_crime, day == 3)
hours <- c(paste(c(1:12), "AM"), paste(c(1:12), "PM"))
countX <- c()
for (i in 1:12) {
num_am <- nrow(filter(day1, hour == i, am_pm == "AM"))
num_pm <- nrow(filter(day1, hour == i, am_pm == "PM"))
countX[i] <- num_am
countX[i * 2] <- num_am
}
library(ggmap)
library(dplyr)
library(ggplot2)
data_crime <- read.csv('../data/Seattle_Police_Department_911_Incident_Response.csv')
#dates <- as.Date(data_crime$Event.Clearance.Date, '%m/%d/%Y %I:%M:%S %p')
data_crime$day <- substr(data_crime$Event.Clearance.Date, 4, 5)
data_crime$day <- strtoi(data_crime$day)
data_crime$hour <- substr(data_crime$Event.Clearance.Date, 12, 13)
data_crime$hour <- as.integer(data_crime$hour)
data_crime$am_pm <- substr(data_crime$Event.Clearance.Date, 21, 22)
day1 <- filter(data_crime, day == 1)
day2 <- filter(data_crime, day == 2)
day3 <- filter(data_crime, day == 3)
hours <- c(paste(c(1:12), "AM"), paste(c(1:12), "PM"))
countX <- c()
for (i in 1:12) {
num_am <- nrow(filter(day1, hour == i, am_pm == "AM"))
num_pm <- nrow(filter(day1, hour == i, am_pm == "PM"))
countX[i] <- num_am
countX[i * 2] <- num_am
}
library(ggmap)
library(dplyr)
library(ggplot2)
data_crime <- read.csv('../data/Seattle_Police_Department_911_Incident_Response.csv')
#dates <- as.Date(data_crime$Event.Clearance.Date, '%m/%d/%Y %I:%M:%S %p')
data_crime$day <- substr(data_crime$Event.Clearance.Date, 4, 5)
data_crime$day <- as.integer(data_crime$day)
data_crime$hour <- substr(data_crime$Event.Clearance.Date, 12, 13)
data_crime$hour <- as.integer(data_crime$hour)
data_crime$am_pm <- substr(data_crime$Event.Clearance.Date, 21, 22)
day1 <- filter(data_crime, day == 1)
day2 <- filter(data_crime, day == 2)
day3 <- filter(data_crime, day == 3)
hours <- c(paste(c(1:12), "AM"), paste(c(1:12), "PM"))
countX <- c()
for (i in 1:12) {
num_am <- nrow(filter(day1, hour == i, am_pm == "AM"))
num_pm <- nrow(filter(day1, hour == i, am_pm == "PM"))
countX[i] <- num_am
countX[i * 2] <- num_am
}
countX
library(ggmap)
library(dplyr)
library(ggplot2)
data_crime <- read.csv('../data/Seattle_Police_Department_911_Incident_Response.csv')
#dates <- as.Date(data_crime$Event.Clearance.Date, '%m/%d/%Y %I:%M:%S %p')
data_crime$day <- substr(data_crime$Event.Clearance.Date, 4, 5)
data_crime$day <- as.integer(data_crime$day)
data_crime$hour <- substr(data_crime$Event.Clearance.Date, 12, 13)
data_crime$hour <- as.integer(data_crime$hour)
data_crime$am_pm <- substr(data_crime$Event.Clearance.Date, 21, 22)
day1 <- filter(data_crime, day == 1)
day2 <- filter(data_crime, day == 2)
day3 <- filter(data_crime, day == 3)
hours <- c(paste(c(1:12), "AM"), paste(c(1:12), "PM"))
countX <- c()
for (i in 1:12) {
num_am <- nrow(filter(day1, hour == i, am_pm == "AM"))
num_pm <- nrow(filter(day1, hour == i, am_pm == "PM"))
countX[i] <- num_am
countX[i + 12] <- num_am
}
countX
library(dplyr)
library(plotly)
data_crime <- read.csv('../data/Seattle_Police_Department_911_Incident_Response.csv')
#dates <- as.Date(data_crime$Event.Clearance.Date, '%m/%d/%Y %I:%M:%S %p')
data_crime$day <- substr(data_crime$Event.Clearance.Date, 4, 5)
data_crime$day <- as.integer(data_crime$day)
data_crime$hour <- substr(data_crime$Event.Clearance.Date, 12, 13)
data_crime$hour <- as.integer(data_crime$hour)
data_crime$am_pm <- substr(data_crime$Event.Clearance.Date, 21, 22)
day1 <- filter(data_crime, day == 1)
day2 <- filter(data_crime, day == 2)
day3 <- filter(data_crime, day == 3)
hours <- c(paste(c(1:12), "AM"), paste(c(1:12), "PM"))
each_day <- function(df) {
countX <- c()
for (i in 1:12) {
num_am <- nrow(filter(df, hour == i, am_pm == "AM"))
num_pm <- nrow(filter(df, hour == i, am_pm == "PM"))
countX[i] <- num_am
countX[i + 12] <- num_am
}
return(countX)
}
graph <- function(df, num) {
p <- plot_ly(
x = hours,
y = each_day(df),
name = paste("Day", num),
type = "bar"
)
}
p <- add_trace(graph(day1, 1), graph(day2, 2), graph(day3, 3))
layout(p, barmode = "stack", xaxis = list(title = "Each hour crime counts")),
yaxis = list(title = "Total crime"))
library(dplyr)
library(plotly)
data_crime <- read.csv('../data/Seattle_Police_Department_911_Incident_Response.csv')
#dates <- as.Date(data_crime$Event.Clearance.Date, '%m/%d/%Y %I:%M:%S %p')
data_crime$day <- substr(data_crime$Event.Clearance.Date, 4, 5)
data_crime$day <- as.integer(data_crime$day)
data_crime$hour <- substr(data_crime$Event.Clearance.Date, 12, 13)
data_crime$hour <- as.integer(data_crime$hour)
data_crime$am_pm <- substr(data_crime$Event.Clearance.Date, 21, 22)
day1 <- filter(data_crime, day == 1)
day2 <- filter(data_crime, day == 2)
day3 <- filter(data_crime, day == 3)
hours <- c(paste(c(1:12), "AM"), paste(c(1:12), "PM"))
each_day <- function(df) {
countX <- c()
for (i in 1:12) {
num_am <- nrow(filter(df, hour == i, am_pm == "AM"))
num_pm <- nrow(filter(df, hour == i, am_pm == "PM"))
countX[i] <- num_am
countX[i + 12] <- num_am
}
return(countX)
}
graph <- function(df, num) {
p <- plot_ly(
x = hours,
y = each_day(df),
name = paste("Day", num),
type = "bar"
)
}
p <- add_trace(graph(day1, 1), graph(day2, 2), graph(day3, 3))
layout(p, barmode = "stack", xaxis = list(title = "Each hour crime counts"),
yaxis = list(title = "Total crime"))
hours
graph(day1, 1)
View(graph(day1, 1))
library(dplyr)
library(plotly)
data_crime <- read.csv('../data/Seattle_Police_Department_911_Incident_Response.csv')
#dates <- as.Date(data_crime$Event.Clearance.Date, '%m/%d/%Y %I:%M:%S %p')
data_crime$day <- substr(data_crime$Event.Clearance.Date, 4, 5)
data_crime$day <- as.integer(data_crime$day)
data_crime$hour <- substr(data_crime$Event.Clearance.Date, 12, 13)
data_crime$hour <- as.integer(data_crime$hour)
data_crime$am_pm <- substr(data_crime$Event.Clearance.Date, 21, 22)
day1 <- filter(data_crime, day == 1)
day2 <- filter(data_crime, day == 2)
day3 <- filter(data_crime, day == 3)
hours <- c(paste(c(1:12), "AM"), paste(c(1:12), "PM"))
each_day <- function(df) {
countX <- c()
for (i in 1:12) {
num_am <- nrow(filter(df, hour == i, am_pm == "AM"))
num_pm <- nrow(filter(df, hour == i, am_pm == "PM"))
countX[i] <- num_am
countX[i + 12] <- num_am
}
return(countX)
}
graph <- function(df, num) {
p <- plot_ly(
x = hours,
y = each_day(df),
name = paste("Day", num),
type = "bar"
)
return(p)
}
p <- add_trace(graph(day1, 1), graph(day2, 2), graph(day3, 3))
layout(p, barmode = "stack", xaxis = list(title = "Each hour crime counts"),
yaxis = list(title = "Total crime"))
graph(day1, 1)
graph(day2, 2)
graph(day1, 1)
library(dplyr)
library(plotly)
data_crime <- read.csv('../data/Seattle_Police_Department_911_Incident_Response.csv')
#dates <- as.Date(data_crime$Event.Clearance.Date, '%m/%d/%Y %I:%M:%S %p')
data_crime$day <- substr(data_crime$Event.Clearance.Date, 4, 5)
data_crime$day <- as.integer(data_crime$day)
data_crime$hour <- substr(data_crime$Event.Clearance.Date, 12, 13)
data_crime$hour <- as.integer(data_crime$hour)
data_crime$am_pm <- substr(data_crime$Event.Clearance.Date, 21, 22)
day1 <- filter(data_crime, day == 1)
day2 <- filter(data_crime, day == 2)
day3 <- filter(data_crime, day == 3)
hours <- c(paste(c(1:12), "AM"), paste(c(1:12), "PM"))
each_day <- function(df) {
countX <- c()
for (i in 1:12) {
num_am <- nrow(filter(df, hour == i, am_pm == "AM"))
num_pm <- nrow(filter(df, hour == i, am_pm == "PM"))
countX[i] <- num_am
countX[i + 12] <- num_am
}
return(countX)
}
graph <- function(df, num) {
p <- plot_ly(
x = hours,
y = each_day(df),
name = paste("Day", num),
type = "bar"
)
return(p)
}
p <- add_trace(graph(day1, 1), graph(day2, 2))
layout(p, barmode = "stack", xaxis = list(title = "Each hour crime counts"),
yaxis = list(title = "Total crime"))
library(dplyr)
library(plotly)
data_crime <- read.csv('../data/Seattle_Police_Department_911_Incident_Response.csv')
#dates <- as.Date(data_crime$Event.Clearance.Date, '%m/%d/%Y %I:%M:%S %p')
data_crime$day <- substr(data_crime$Event.Clearance.Date, 4, 5)
data_crime$day <- as.integer(data_crime$day)
data_crime$hour <- substr(data_crime$Event.Clearance.Date, 12, 13)
data_crime$hour <- as.integer(data_crime$hour)
data_crime$am_pm <- substr(data_crime$Event.Clearance.Date, 21, 22)
day1 <- filter(data_crime, day == 1)
day2 <- filter(data_crime, day == 2)
day3 <- filter(data_crime, day == 3)
hours <- c(paste(c(1:12), "AM"), paste(c(1:12), "PM"))
each_day <- function(df) {
countX <- c()
for (i in 1:12) {
num_am <- nrow(filter(df, hour == i, am_pm == "AM"))
num_pm <- nrow(filter(df, hour == i, am_pm == "PM"))
countX[i] <- num_am
countX[i + 12] <- num_am
}
return(countX)
}
p1 <- plot_ly(
x = hours,
y = each_day(day1),
name = "Day 1",
type = "bar"
)
p2 <- add_trace(
p1,
x = hours,
y = each_day(day2),
name = "Day 2"
)
layout(p2, barmode = "stack", xaxis = list(title = "Each hour crime counts"),
yaxis = list(title = "Total crime"))
library(dplyr)
library(plotly)
data_crime <- read.csv('../data/Seattle_Police_Department_911_Incident_Response.csv')
#dates <- as.Date(data_crime$Event.Clearance.Date, '%m/%d/%Y %I:%M:%S %p')
data_crime$day <- substr(data_crime$Event.Clearance.Date, 4, 5)
data_crime$day <- as.integer(data_crime$day)
data_crime$hour <- substr(data_crime$Event.Clearance.Date, 12, 13)
data_crime$hour <- as.integer(data_crime$hour)
data_crime$am_pm <- substr(data_crime$Event.Clearance.Date, 21, 22)
day1 <- filter(data_crime, day == 1)
day2 <- filter(data_crime, day == 2)
day3 <- filter(data_crime, day == 3)
hours <- c(paste(c(1:12), "AM"), paste(c(1:12), "PM"))
each_day <- function(df) {
countX <- c()
for (i in 1:12) {
num_am <- nrow(filter(df, hour == i, am_pm == "AM"))
num_pm <- nrow(filter(df, hour == i, am_pm == "PM"))
countX[i] <- num_am
countX[i + 12] <- num_am
}
return(countX)
}
p1 <- plot_ly(
x = hours,
y = each_day(day1),
name = "Day 1",
type = "bar"
)
p2 <- add_trace(
p1,
x = hours,
y = each_day(day2),
name = "Day 2"
)
p3 <- add_trace(
p2,
x = hours,
y = each_day(day3),
name = "Day 3"
)
layout(p3, barmode = "stack", xaxis = list(title = "Each hour crime counts"),
yaxis = list(title = "Total crime"))
each_day(day3)
library(dplyr)
library(plotly)
data_crime <- read.csv('../data/Seattle_Police_Department_911_Incident_Response.csv')
#dates <- as.Date(data_crime$Event.Clearance.Date, '%m/%d/%Y %I:%M:%S %p')
data_crime$day <- substr(data_crime$Event.Clearance.Date, 4, 5)
data_crime$day <- as.integer(data_crime$day)
data_crime$hour <- substr(data_crime$Event.Clearance.Date, 12, 13)
data_crime$hour <- as.integer(data_crime$hour)
data_crime$am_pm <- substr(data_crime$Event.Clearance.Date, 21, 22)
day1 <- filter(data_crime, day == 1)
day2 <- filter(data_crime, day == 2)
day3 <- filter(data_crime, day == 3)
hours <- c(paste(c(1:12), "AM"), paste(c(1:12), "PM"))
each_day <- function(df) {
countX <- c()
for (i in 1:12) {
num_am <- nrow(filter(df, hour == i, am_pm == "AM"))
num_pm <- nrow(filter(df, hour == i, am_pm == "PM"))
countX[i] <- num_am
countX[i + 12] <- num_am
}
return(countX)
}
p1 <- plot_ly(
x = hours,
y = each_day(day1),
name = "Day 1",
type = "bar"
)
p2 <- add_trace(
p1,
x = hours,
y = each_day(day2),
name = "Day 2"
x = hours,
y = each_day(day3),
name = "Day 3"
)
layout(p2, barmode = "stack", xaxis = list(title = "Each hour crime counts"),
yaxis = list(title = "Total crime"))
library(dplyr)
library(plotly)
data_crime <- read.csv('../data/Seattle_Police_Department_911_Incident_Response.csv')
#dates <- as.Date(data_crime$Event.Clearance.Date, '%m/%d/%Y %I:%M:%S %p')
data_crime$day <- substr(data_crime$Event.Clearance.Date, 4, 5)
data_crime$day <- as.integer(data_crime$day)
data_crime$hour <- substr(data_crime$Event.Clearance.Date, 12, 13)
data_crime$hour <- as.integer(data_crime$hour)
data_crime$am_pm <- substr(data_crime$Event.Clearance.Date, 21, 22)
day1 <- filter(data_crime, day == 1)
day2 <- filter(data_crime, day == 2)
day3 <- filter(data_crime, day == 3)
hours <- c(paste(c(1:12), "AM"), paste(c(1:12), "PM"))
each_day <- function(df) {
countX <- c()
for (i in 1:12) {
num_am <- nrow(filter(df, hour == i, am_pm == "AM"))
num_pm <- nrow(filter(df, hour == i, am_pm == "PM"))
countX[i] <- num_am
countX[i + 12] <- num_am
}
return(countX)
}
p1 <- plot_ly(
x = hours,
y = each_day(day1),
name = "Day 1",
type = "bar"
)
p2 <- add_trace(
p1,
x = hours,
y = each_day(day2),
name = "Day 2"
)
p3 <- add_trace(
p2,
x = hours,
y = each_day(day3),
name = "Day 3"
)
layout(p3, barmode = "stack", xaxis = list(title = "Each hour crime counts"),
yaxis = list(title = "Total crime"))
